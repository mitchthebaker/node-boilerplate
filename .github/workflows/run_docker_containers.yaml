name: Run Docker Containers 
on:
  push: 
    paths:
      - ".github/workflows/run_docker_containers.yaml"
  workflow_call:
  workflow_dispatch:

permissions: read-all

jobs: 
  run-docker: 
    name: Run Docker 
    runs-on: ubuntu-latest 
    environment: Development
    env: 
      COMPOSE_FILE: ./docker-compose.yml
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 
      
      - name: Build .env files
        uses: ./.github/actions/build-env
        with:
          NODE_ENV_DEV: ${{ secrets.NODE_ENV_DEV }}
          NODE_PORT: ${{ secrets.NODE_PORT }}
          PG_USER: ${{ secrets.PG_USER }}
          PG_HOST: ${{ secrets.PG_HOST }}
          PG_DB: ${{ secrets.PG_DB }}
          PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
          PG_PORT: ${{ secrets.PG_PORT }}

      - name: Build/Run Docker
        run: |
          docker-compose -f $COMPOSE_FILE build
          docker-compose -f $COMPOSE_FILE up -d
          docker-compose ps
      
      - name: Check if client-app service is running 
        run: | 
          counter=0
          max_attempts=6

          until curl -I http://localhost:${{ secrets.REACT_PORT }} 2>/dev/null | grep -q "200 OK"; do
            if [ $counter -ge $max_attempts ]; then
                echo "Timeout reached: client-app service was not ready in 30 seconds."
                exit 1
            fi

            echo "Waiting for client-app service to be ready..."
            sleep 5
            counter=$((counter + 1))
          done 
          echo "client-app is running!"
      
      - name: Check if api-gateway service is running 
        run: | 
          counter=0
          max_attempts=6

          until curl -I http://localhost:${{ secrets.NODE_PORT }} 2>/dev/null | grep -q "200 OK"; do
            if [ $counter -ge $max_attempts ]; then
                echo "Timeout reached: api-gateway service was not ready in 30 seconds."
                exit 1
            fi

            echo "Waiting for api-gateway service to be ready..."
            sleep 5
            counter=$((counter + 1))
          done 
          echo "api-gateway is running!"
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    
      - name: Deploy Docker images 
        run: docker-compose -f $COMPOSE_FILE push
      
      - name: Log out from DockerHub
        run: docker logout

      - name: Stop Docker
        run: docker-compose -f $COMPOSE_FILE down -v

# For pushing to one image
#
#- name: Deploy api-gateway image to DockerHub
#  uses: ./.github/actions/dockerhub-deploy
#  with:
#    image-name: mitchthebaker/api-gateway
#    dockerfile: ./api-gateway/Dockerfile
#    context: .
#
#- name: Deploy client-app image to DockerHub
#  uses: ./.github/actions/dockerhub-deploy
#  with: 
#    image-name: mitchthebaker/client-app
#    dockerfile: ./client-app/Dockerfile
#    context: .
